variables:
  BUILD_DIST: bookworm
  BUILD_IMAGE: debian:${BUILD_DIST}-slim
  BUILD_SOURCES_LIST: |
      deb http://deb.debian.org/debian ${BUILD_DIST} main
      deb http://deb.debian.org/debian-security ${BUILD_DIST}-security main

.build:
  stage: build
  image: ${BUILD_IMAGE}

  before_script:
  - >
    if [[ $CI_DISPOSABLE_ENVIRONMENT ]]; then
      echo -n "$BUILD_SOURCES_LIST" > /etc/apt/sources.list
      if [[ $JOB_HOST_ARCH != all ]]; then
        dpkg --add-architecture $JOB_HOST_ARCH
      fi
      apt-get update -qy
      apt-get upgrade -qy -o DPkg::Options::=--force-unsafe-io fakeroot
      if [[ ${BUILD_REQUIRES_GO:-} ]]; then
        apt-get install -qy --no-install-recommends golang
      fi
      apt-get install -qy --no-install-recommends ca-certificates
      if [[ $JOB_HOST_ARCH = all ]]; then
        apt-get build-dep -qy --indep-only -o DPkg::Options::=--force-unsafe-io ./_output/*.dsc
      else
        if [[ $JOB_HOST_ARCH != $(dpkg --print-architecture) ]]; then
          export DEB_BUILD_PROFILES="${DEB_BUILD_PROFILES:-} cross"
        fi
        apt-get build-dep -qy -a $JOB_HOST_ARCH --arch-only -o DPkg::Options::=--force-unsafe-io ./_output/*.dsc
        # Workaround for non-multiarch build-essential, see https://bugs.debian.org/666743
        apt-get install -qy --no-install-recommends binutils-$JOB_HOST_GNU_TYPE_PACKAGE gcc-$JOB_HOST_GNU_TYPE_PACKAGE g++-$JOB_HOST_GNU_TYPE_PACKAGE libc6-dev:$JOB_HOST_ARCH
      fi
    fi
  - cd _output
  - dpkg-source -x *.dsc src
  - chown nobody -R .
  - cd src

  script:
  - >
    if [[ $JOB_HOST_ARCH != $(dpkg --print-architecture) ]]; then
      export DEB_BUILD_OPTIONS="${DEB_BUILD_OPTIONS:-} nocheck"
      export DEB_BUILD_PROFILES="${DEB_BUILD_PROFILES:-} cross"
    fi
  - su -s /bin/sh -c "set -euE; dpkg-buildpackage -B -a $JOB_HOST_ARCH" nobody

  dependencies:
  - source
  artifacts:
    paths:
    - _output/*_${JOB_HOST_ARCH}.*
    expire_in: 2 days

build all:
  extends: .build
  script:
  - su -s /bin/sh -c "set -euE; dpkg-buildpackage -A" nobody
  variables:
    JOB_HOST_ARCH: all
  rules:
  - if: '$BUILD_ARCH_ALL != ""'

build amd64:
  extends: .build
  variables:
    JOB_HOST_ARCH: amd64
    JOB_HOST_GNU_TYPE_PACKAGE: x86-64-linux-gnu
  tags:
  - gardenlinux-build-amd64
  rules:
  - if: '$BUILD_ARCH_AMD64 != ""'

build arm64:
  extends: .build
  variables:
    JOB_HOST_ARCH: arm64
    JOB_HOST_GNU_TYPE_PACKAGE: aarch64-linux-gnu
  tags:
  - gardenlinux-build-arm64
  rules:
  - if: '$BUILD_ARCH_ARM64 != ""'
